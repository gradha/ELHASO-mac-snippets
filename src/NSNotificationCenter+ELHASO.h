#import <Foundation/Foundation.h>

/// Use in your files to define a private static var to discriminate context.
#define EHKVO_INIT_CONTEXT() \
	static void *_PRIVATE_KVO_CONTEXT

/// Accessor to the variables generated by the defines.
#define EHKVO_MANGLED_VAR(PROPERTY_NAME) EHKVO_ ## PROPERTY_NAME

/// Use these to create static string variables with the watched properties.
#define EHKVO_INIT_WATCH_VAR(PROPERTY_NAME) \
	static NSString *EHKVO_ ## PROPERTY_NAME = @"" # PROPERTY_NAME

/// Use this macro to start watching the property of a target.
#define EHKVO_START_WATCH(TARGET, PROPERTY_NAME) do { \
	NSAssert([TARGET respondsToSelector: \
		NSSelectorFromString(EHKVO_MANGLED_VAR(PROPERTY_NAME))], \
		@"Key path "#PROPERTY_NAME @"not present for object"); \
	[TARGET addObserver:self forKeyPath:EHKVO_MANGLED_VAR(PROPERTY_NAME) \
		options:NSKeyValueObservingOptionNew context:&_PRIVATE_KVO_CONTEXT]; \
} while(0)

/// Here, stop watching a property.
#define EHKVO_END_WATCH(TARGET, PROPERTY_NAME) do { \
	NSAssert([TARGET respondsToSelector: \
		NSSelectorFromString(EHKVO_MANGLED_VAR(PROPERTY_NAME))], \
		@"Key path "#PROPERTY_NAME @"not present for object"); \
	[TARGET removeObserver:self forKeyPath:EHKVO_MANGLED_VAR(PROPERTY_NAME)]; \
} while(0)

/// Put this somewhere in your class to watch KVO properties and pass them up.
#define EHKVO_OBSERVE_METHOD(WATCHED_CONDITIONS) \
- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object \
	change:(NSDictionary *)change context:(void *)context \
{ \
	if (context != &_PRIVATE_KVO_CONTEXT) { \
		[super observeValueForKeyPath:keyPath ofObject:object \
			change:change context:context]; \
		return; \
	} \
	WATCHED_CONDITIONS \
}

/// Use this macro to call your code from checks inside EHKVO_OBSERVE_METHOD.
#define EHKVO_OBSERVE_CHECK(PROPERTY_NAME, EXECUTE) do { \
	if ([keyPath isEqual:EHKVO_MANGLED_VAR(PROPERTY_NAME)]) { EXECUTE ;} \
} while(0)



/** \class NSNotificationCenter
 * Adds some shortcut wrappers.
 */
@interface NSNotificationCenter (ELHASO)

- (void)refresh_observer:(id)observer selector:(SEL)selector
	name:(NSString*)name object:(id)object;

@end

// vim:tabstop=4 shiftwidth=4 syntax=objc
